<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CropMaize" xml:space="preserve">
    <value>Maize</value>
  </data>
  <data name="CropRice" xml:space="preserve">
    <value>Rice</value>
  </data>
  <data name="date_unit" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DescriptionPart1" xml:space="preserve">
    <value>For the municipality </value>
  </data>
  <data name="DescriptionPart2" xml:space="preserve">
    <value>the agroclimatic forecast is presented</value>
  </data>
  <data name="DescriptionPart3" xml:space="preserve">
    <value>potential yield</value>
  </data>
  <data name="DescriptionPart4" xml:space="preserve">
    <value>according to planting date of</value>
  </data>
  <data name="DescriptionPart5" xml:space="preserve">
    <value>for calibrated varieties</value>
  </data>
  <data name="DescriptionPart6" xml:space="preserve">
    <value>The weather station that provides the data to estimate is</value>
  </data>
  <data name="DescriptionPart7" xml:space="preserve">
    <value>provided by</value>
  </data>
  <data name="DescriptionPart8" xml:space="preserve">
    <value>Observe the performance of all cultivars before selecting the variety to plant</value>
  </data>
  <data name="DescriptionTitle" xml:space="preserve">
    <value>Agroclimatic crop forecast</value>
  </data>
  <data name="ForecastCultivarPart1" xml:space="preserve">
    <value>The agroclimatic forecast for the cultivar</value>
  </data>
  <data name="ForecastCultivarPart2" xml:space="preserve">
    <value>rainfed</value>
  </data>
  <data name="ForecastCultivarPart3" xml:space="preserve">
    <value>To calculate the potential yield, please select the soil texture of the plot to be planted</value>
  </data>
  <data name="ForecastCultivarRangesDescription" xml:space="preserve">
    <value>In the following plots the potential yield of the cultivar is grouped by ranges. The color of the cell indicates the level of yield according to a scale defined by the experts. The color of the categories represents in what range it is</value>
  </data>
  <data name="ForecastSubtitle" xml:space="preserve">
    <value>Potential yield according to planting date</value>
  </data>
  <data name="Months" xml:space="preserve">
    <value>January,February,March,April,May,June,July,August,September,October,November,December</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Crop</value>
  </data>
  <data name="yield_unit" xml:space="preserve">
    <value>Kg/ha</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>Tue,Wed,Thu,Fri,Sat,Sun,Mon</value>
  </data>
  <data name="ForecastCultivarBarsText" xml:space="preserve">
    <value>In the following plot you can see the average potential yield, according to the planting date</value>
  </data>
  <data name="ForecastCultivarBarsTitle" xml:space="preserve">
    <value>Average potential yield</value>
  </data>
  <data name="ForecastCultivarDateText1" xml:space="preserve">
    <value>To achieve maximum potential yield</value>
  </data>
  <data name="ForecastCultivarDateText2" xml:space="preserve">
    <value>at harvest, the most favorable planting date is</value>
  </data>
  <data name="ForecastCultivarDateTitle" xml:space="preserve">
    <value>Planting dates</value>
  </data>
  <data name="ForecastVariationDescription" xml:space="preserve">
    <value>This plot shows the confidence level of the potential yield forecast according to the plating date, calculated from different climatic scenarios. The black line is the average yield potential for each planting date (corresponds to the value presented in the calendar), the dark green strip corresponds to a 95% confidence interval (high probability) and the light green strip corresponds to extremes (low probability) of the expected potential return on each date</value>
  </data>
  <data name="ForecastVariationTitle" xml:space="preserve">
    <value>Forecast confidence level</value>
  </data>
  <data name="bio_acu_Description" xml:space="preserve">
    <value>Accumulated biomass</value>
  </data>
  <data name="bio_acu_unit" xml:space="preserve">
    <value>mm</value>
  </data>
  <data name="d_dry_Description" xml:space="preserve">
    <value>Days to dry</value>
  </data>
  <data name="d_dry_unit" xml:space="preserve">
    <value>Day(s)</value>
  </data>
  <data name="d_har_Description" xml:space="preserve">
    <value>Days to harvest</value>
  </data>
  <data name="d_har_unit" xml:space="preserve">
    <value>Day(s)</value>
  </data>
  <data name="prec_acu_Description" xml:space="preserve">
    <value>Accumulated precipitation</value>
  </data>
  <data name="prec_acu_unit" xml:space="preserve">
    <value>mm</value>
  </data>
  <data name="t_max_acu_Description" xml:space="preserve">
    <value>Maximum accumulated temperature</value>
  </data>
  <data name="t_max_acu_unit" xml:space="preserve">
    <value>°C</value>
  </data>
  <data name="t_min_acu_Description" xml:space="preserve">
    <value>Minimum accumulated temperature</value>
  </data>
  <data name="t_min_acu_unit" xml:space="preserve">
    <value>°C</value>
  </data>
  <data name="yield_14_Description" xml:space="preserve">
    <value>Yield at 14% humidity</value>
  </data>
  <data name="yield_14_unit" xml:space="preserve">
    <value>Kg/ha</value>
  </data>
  <data name="ForecastExceedanceDescription" xml:space="preserve">
    <value>In the following plot you can see whatever the probabilities of exceedance according to the average potential yield or planting date</value>
  </data>
  <data name="ForecastExceedanceTitle" xml:space="preserve">
    <value>Probabilities of exceedance</value>
  </data>
  <data name="planting_date_Description" xml:space="preserve">
    <value>Planting date</value>
  </data>
  <data name="planting_date_unit" xml:space="preserve">
    <value>Day of year</value>
  </data>
  <data name="probability_unit" xml:space="preserve">
    <value>Probability (%)</value>
  </data>
  <data name="yield_0_Description" xml:space="preserve">
    <value>Yield at 0% humidity</value>
  </data>
  <data name="yield_0_unit" xml:space="preserve">
    <value>Kg/ha</value>
  </data>
  <data name="yield_Description" xml:space="preserve">
    <value>Yield</value>
  </data>
</root>